{"ast":null,"code":"var _jsxFileName = \"/Users/phatnguyen/Projects/NextJsApp/components/BookDetails.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBookQuery } from '../queries/queries';\n\nclass BookDetails extends Component {\n  displayBookDetails() {\n    const {\n      book\n    } = this.props.data;\n\n    if (book) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }\n      }, book.name), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }\n      }, book.genre), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }\n      }, book.author.name), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }, \"All books by this author:\"), __jsx(\"ul\", {\n        className: \"other-books\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }\n      }, book.author.books.map(item => {\n        return __jsx(\"li\", {\n          key: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 36\n          }\n        }, item.name);\n      })));\n    } else {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, \"No book selected...\");\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"book-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, this.displayBookDetails());\n  }\n\n}\n\nexport default graphql(getBookQuery, {\n  options: props => {\n    return {\n      variables: {\n        id: props.bookId\n      }\n    };\n  }\n})(BookDetails);","map":{"version":3,"sources":["/Users/phatnguyen/Projects/NextJsApp/components/BookDetails.js"],"names":["React","Component","graphql","getBookQuery","BookDetails","displayBookDetails","book","props","data","name","genre","author","books","map","item","id","render","options","variables","bookId"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAChCI,EAAAA,kBAAkB,GAAE;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAAL,CAAWC,IAA5B;;AACA,QAAGF,IAAH,EAAQ;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,IAAI,CAACG,IAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,IAAI,CAACI,KAAV,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,IAAI,CAACK,MAAL,CAAYF,IAAjB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAJJ,EAKI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMH,IAAI,CAACK,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsBC,IAAI,IAAI;AAC5B,eAAO;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBD,IAAI,CAACL,IAAzB,CAAP;AACH,OAFC,CADN,CALJ,CADJ;AAaH,KAdD,MAcO;AACH,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAR;AACH;AACJ;;AACDO,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKX,kBAAL,EADN,CADJ;AAKH;;AA3B+B;;AA8BpC,eAAeH,OAAO,CAACC,YAAD,EAAe;AACjCc,EAAAA,OAAO,EAAGV,KAAD,IAAW;AAChB,WAAO;AACHW,MAAAA,SAAS,EAAE;AACPH,QAAAA,EAAE,EAAER,KAAK,CAACY;AADH;AADR,KAAP;AAKH;AAPgC,CAAf,CAAP,CAQZf,WARY,CAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBookQuery } from '../queries/queries';\n\nclass BookDetails extends Component {\n    displayBookDetails(){\n        const { book } = this.props.data;\n        if(book){\n            return(\n                <div>\n                    <h2>{ book.name }</h2>\n                    <p>{ book.genre }</p>\n                    <p>{ book.author.name }</p>\n                    <p>All books by this author:</p>\n                    <ul className=\"other-books\">\n                        { book.author.books.map(item => {\n                            return <li key={item.id}>{ item.name }</li>\n                        })}\n                    </ul>\n                </div>\n            );\n        } else {\n            return( <div>No book selected...</div> );\n        }\n    }\n    render(){\n        return(\n            <div id=\"book-details\">\n                { this.displayBookDetails() }\n            </div>\n        );\n    }\n}\n\nexport default graphql(getBookQuery, {\n    options: (props) => {\n        return {\n            variables: {\n                id: props.bookId\n            }\n        }\n    }\n})(BookDetails);"]},"metadata":{},"sourceType":"module"}