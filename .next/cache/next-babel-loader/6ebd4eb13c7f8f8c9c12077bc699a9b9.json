{"ast":null,"code":"var _jsxFileName = \"/Users/phatnguyen/Projects/NextJsApp/components/AddBook.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { flowRight as compose } from 'lodash';\nimport { getAuthorsQuery, addBookMutation, getBooksQuery } from '../queries/queries';\n\nclass AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      genre: '',\n      authorId: 0\n    };\n  }\n\n  displayAuthors() {\n    var data = this.props.getAuthorsQuery;\n\n    if (data.loading) {\n      return __jsx(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, \"Loading Authors...\");\n    } else {\n      return data.authors.map(author => {\n        return __jsx(\"option\", {\n          key: author.id,\n          value: author.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }\n        }, author.name);\n      });\n    }\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    this.props.addBookMutation({\n      variables: {\n        name: this.state.name,\n        genre: this.state.genre,\n        authorId: parseInt(this.state.authorId)\n      },\n      refetchQueries: [{\n        query: getBooksQuery\n      }]\n    });\n  }\n\n  render() {\n    return __jsx(\"form\", {\n      id: \"add-book\",\n      onSubmit: this.submitForm.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, \"Book name:\"), __jsx(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, \"Genre:\"), __jsx(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        genre: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"Author:\"), __jsx(\"select\", {\n      onChange: e => this.setState({\n        authorId: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, __jsx(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \"Select author\"), this.displayAuthors())), __jsx(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"+\"));\n  }\n\n}\n\nexport default compose(graphql(getAuthorsQuery, {\n  name: \"getAuthorsQuery\"\n}), graphql(addBookMutation, {\n  name: \"addBookMutation\"\n}))(AddBook);","map":{"version":3,"sources":["/Users/phatnguyen/Projects/NextJsApp/components/AddBook.js"],"names":["React","Component","graphql","flowRight","compose","getAuthorsQuery","addBookMutation","getBooksQuery","AddBook","constructor","props","state","name","genre","authorId","displayAuthors","data","loading","authors","map","author","id","submitForm","e","preventDefault","variables","parseInt","refetchQueries","query","render","bind","setState","target","value"],"mappings":"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","sourcesContent":["import React,{ Component }from 'react';\nimport { graphql } from 'react-apollo';\nimport {flowRight as compose} from 'lodash';\nimport {getAuthorsQuery, addBookMutation, getBooksQuery} from '../queries/queries'\n\nclass AddBook extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n            genre: '',\n            authorId: 0\n        };\n    }\n    displayAuthors(){\n        var data = this.props.getAuthorsQuery\n        if(data.loading){\n            return (\n                <option>Loading Authors...</option>\n            )\n        }\n        else{\n            return data.authors.map(author => {\n                return (\n                <option key={author.id} value={author.id}>{author.name}</option>\n                );\n            }) \n        }\n    }\n    submitForm(e){\n        e.preventDefault()\n        this.props.addBookMutation({\n            variables: {\n                name: this.state.name,\n                genre: this.state.genre,\n                authorId: parseInt(this.state.authorId)\n            },\n            refetchQueries: [{ query: getBooksQuery }]\n        });\n    }\n    render(){\n        return(\n            <form id=\"add-book\" onSubmit={ this.submitForm.bind(this) } >\n                <div className=\"field\">\n                    <label>Book name:</label>\n                    <input type=\"text\" onChange={ (e) => this.setState({ name: e.target.value }) } />\n                </div>\n                <div className=\"field\">\n                    <label>Genre:</label>\n                    <input type=\"text\" onChange={ (e) => this.setState({ genre: e.target.value }) } />\n                </div>\n                <div className=\"field\">\n                    <label>Author:</label>\n                    <select onChange={ (e) => this.setState({ authorId: e.target.value }) } >\n                        <option>Select author</option>\n                        { this.displayAuthors() }\n                    </select>\n                </div>\n                <button>+</button>\n            </form>\n        );\n    }\n}\n\nexport default compose(\n    graphql(getAuthorsQuery, { name: \"getAuthorsQuery\" }),\n    graphql(addBookMutation, { name: \"addBookMutation\" })\n)(AddBook);\n"]},"metadata":{},"sourceType":"module"}