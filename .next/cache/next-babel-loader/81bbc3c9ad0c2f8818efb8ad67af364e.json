{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/phatnguyen/Projects/NextJsApp/components/AddBook.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { flowRight as compose } from 'lodash';\nimport { getAuthorsQuery, addBookMutation, getBooksQuery } from '../queries/queries';\n\nvar AddBook = /*#__PURE__*/function (_Component) {\n  _inherits(AddBook, _Component);\n\n  var _super = _createSuper(AddBook);\n\n  function AddBook(props) {\n    var _this;\n\n    _classCallCheck(this, AddBook);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: '',\n      genre: '',\n      authorId: 0\n    };\n    return _this;\n  }\n\n  _createClass(AddBook, [{\n    key: \"displayAuthors\",\n    value: function displayAuthors() {\n      var _this2 = this;\n\n      var data = this.props.getAuthorsQuery;\n\n      if (data.loading) {\n        return __jsx(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }\n        }, \"Loading Authors...\");\n      } else {\n        return data.authors.map(function (author) {\n          return __jsx(\"option\", {\n            key: author.id,\n            value: author.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }\n          }, author.name);\n        });\n      }\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(e) {\n      e.preventDefault();\n      this.props.addBookMutation({\n        variables: {\n          name: this.state.name,\n          genre: this.state.genre,\n          authorId: parseInt(this.state.authorId)\n        },\n        refetchQueries: [{\n          query: getBooksQuery\n        }]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"form\", {\n        id: \"add-book\",\n        onSubmit: this.submitForm.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, \"Book name:\"), __jsx(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            name: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      })), __jsx(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, \"Genre:\"), __jsx(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            genre: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      })), __jsx(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, \"Author:\"), __jsx(\"select\", {\n        onChange: function onChange(e) {\n          return _this3.setState({\n            authorId: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, __jsx(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, \"Select author\"), this.displayAuthors())), __jsx(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, \"+\"));\n    }\n  }]);\n\n  return AddBook;\n}(Component);\n\nexport default compose(graphql(getAuthorsQuery, {\n  name: \"getAuthorsQuery\"\n}), graphql(addBookMutation, {\n  name: \"addBookMutation\"\n}))(AddBook);","map":{"version":3,"sources":["/Users/phatnguyen/Projects/NextJsApp/components/AddBook.js"],"names":["React","Component","graphql","flowRight","compose","getAuthorsQuery","addBookMutation","getBooksQuery","AddBook","props","state","name","genre","authorId","data","loading","authors","map","author","id","e","preventDefault","variables","parseInt","refetchQueries","query","submitForm","bind","setState","target","value","displayAuthors"],"mappings":"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","sourcesContent":["import React,{ Component }from 'react';\nimport { graphql } from 'react-apollo';\nimport {flowRight as compose} from 'lodash';\nimport {getAuthorsQuery, addBookMutation, getBooksQuery} from '../queries/queries'\n\nclass AddBook extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n            genre: '',\n            authorId: 0\n        };\n    }\n    displayAuthors(){\n        var data = this.props.getAuthorsQuery\n        if(data.loading){\n            return (\n                <option>Loading Authors...</option>\n            )\n        }\n        else{\n            return data.authors.map(author => {\n                return (\n                <option key={author.id} value={author.id}>{author.name}</option>\n                );\n            }) \n        }\n    }\n    submitForm(e){\n        e.preventDefault()\n        this.props.addBookMutation({\n            variables: {\n                name: this.state.name,\n                genre: this.state.genre,\n                authorId: parseInt(this.state.authorId)\n            },\n            refetchQueries: [{ query: getBooksQuery }]\n        });\n    }\n    render(){\n        return(\n            <form id=\"add-book\" onSubmit={ this.submitForm.bind(this) } >\n                <div className=\"field\">\n                    <label>Book name:</label>\n                    <input type=\"text\" onChange={ (e) => this.setState({ name: e.target.value }) } />\n                </div>\n                <div className=\"field\">\n                    <label>Genre:</label>\n                    <input type=\"text\" onChange={ (e) => this.setState({ genre: e.target.value }) } />\n                </div>\n                <div className=\"field\">\n                    <label>Author:</label>\n                    <select onChange={ (e) => this.setState({ authorId: e.target.value }) } >\n                        <option>Select author</option>\n                        { this.displayAuthors() }\n                    </select>\n                </div>\n                <button>+</button>\n            </form>\n        );\n    }\n}\n\nexport default compose(\n    graphql(getAuthorsQuery, { name: \"getAuthorsQuery\" }),\n    graphql(addBookMutation, { name: \"addBookMutation\" })\n)(AddBook);\n"]},"metadata":{},"sourceType":"module"}